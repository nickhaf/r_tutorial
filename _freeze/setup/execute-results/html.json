{
  "hash": "f85340cbf1c46be5d4d3a09ab7facc30",
  "result": {
    "markdown": "# What is R?\n\n## \n\n# Installation\n\n## R\n\n## RStudio\n\n### Optional: posit Cloud\n\nIn case you don't use a notebook where you can install R and RStudio, or you don't want to, you can use the posit Cloud service. It can be run in you browser, and provides the same functions and interface as if you were working with your own RStudio installation. And it's free as well (at least 25 hours per month, but that should be more than enough for this workshop and probably for the following week).\n\n1.  Go to [posit Cloud](https://posit.cloud/).\n2.  Click on `GET STARTED`.\n3.  Create an account (it's free) and login.\n4.  On the upper right, click on `New Project`. This will create a new RStudio project, which you can use the same way as described in this tutorial.\n\n### Structure of the RStudio interface\n\n#### Script Pane\n\n#### Console {#console}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"Hello World!\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Hello World!\"\n```\n:::\n:::\n\n\nTadaa, we just wrote our first line of code.\n\n# First Steps\n\nSome of the most basic things you can do in `R` are basic mathematical operations. In your [console](#console), type the following code lines and press `Enter`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# sum\n1 + 2\n\n# substract\n2 - 4\n\n# multiply\n4 * 4\n\n# divide\n3/2\n```\n:::\n\n\nBy the way: Code lines, that are preceded by a `#` are commented out, and will not be evaluated.\n\n## Workflow\n\n### Scripts\n\nWhen only coding in our [console](#console) we quickly run into the question where to save our code for further evaluation. Therefore, we want to write all our code that is worth saving into a [script](#script_pane).\n\n### RStudio Projects\n\nOver time, it will become increasingly hard to organize all your files, working directories and workspaces in a reasonable manner. For this, RStudio Projects can be used (highly recommended).\n\n### Exercises\n\n1.  Create a new folder for this tutorial, where all your files will go.\n2.  Create a new RStudio project and open it. Got to `File` - `New Project` - `Existing Directory` and select the path of the folder you created in step `1`.\n3.  Create a new R Script by clicking on `File` - `New File` - `R Script`. Save it in you folder.\\\n    *Tipp: Within your project folder create a folder named `R`, where all your R Scripts will go. You can do the same for `data`, `plots` etc. later on. This will help you to structure your working directory.*\n\n## About this workshop\n\nThis workshop will use a tutorial package (you will learn more about packages later) that can be run from within `R` and will provide interactive exercises. For now, please install that tutorial package by typing (and evaluating) the following code into your newly created R Script:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"devtools\")\ndevtools::install_github(\"nickhaf/tutoR\")\n```\n:::\n\n\nFor each chapter, there will be a short theory part. Most of the exercises can be run interactively with the `tutoR` package, but some will incourage you to use the RStudio environment, to get more familiar with it.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}