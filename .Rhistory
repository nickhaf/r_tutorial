# Count the number of medals for each name:
count(Medal)
head(medal_counts_athlete)
# Extract all rows of Usain Bolt
medals_bolt <- medal_counts_athlete %>%
filter(Name == "Usain St. Leo Bolt")
head(medals_bolt)
# Extract all rows of Usain bolt from the athletes data set
stats_bolt <- athletes %>%
filter(Name == "Usain St. Leo Bolt") %>%
## sort the data frame by year:
arrange(Year)
head(stats_bolt)
# Print a statement using the data we just have extracted:
print(
paste("Usain St. Leo Bolt participated in Olympic games in the year(s)",
paste0(unique(stats_bolt$Year), collapse = ", "),
"and won",
medals_bolt$n,
"Goldmedal/s in total. The athletes sport was:",
unique(stats_bolt$Sport),
".")
)
medal_counts$n_100 <- ifelse(
medal_counts$n >= 100,
yes = TRUE,
no = FALSE
)
# Chunk 1
source(here::here("output_hook.R"))
# Chunk 2
# install.packages("tidyverse")
# install.packages("here")
library(tidyverse)
library(here)
athletes <- readRDS(file = here::here("raw_data", "athletes.rds"))
# Chunk 3
medal_counts <- athletes %>%
filter(Medal == "Gold") %>%
group_by(Region) %>%
count(Medal)
# Chunk 4
print(
paste0(
medal_counts[medal_counts$Region == "Algeria", "n"],
" Olympic gold medalists are from ",
medal_counts[medal_counts$Region == "Algeria", "Region"],
".")
)
print(
paste0(
medal_counts[medal_counts$Region == "Argentina", "n"],
" Olympic gold medalists are from ",
medal_counts[medal_counts$Region == "Argentina", "Region"],
".")
)
print(
paste0(
medal_counts[medal_counts$Region == "Armenia", "n"],
" Olympic gold medalists are from ",
medal_counts[medal_counts$Region == "Armenia", "Region"],
".")
)
print(
paste0(medal_counts[medal_counts$Region == "Australia", "n"],
" Olympic gold medalists are from ",
medal_counts[medal_counts$Region == "Australia", "Region"],
".")
)
# Chunk 5
for(i in unique(medal_counts$Region)){
print(
paste0(
medal_counts[medal_counts$Region == i, "n"],
" Olympic gold medalists are from ",
i,
"." )
)
}
# Chunk 6
for(i in 10:20){
new_i <- i * 100
print(new_i)
}
# Chunk 7
for(i in unique(medal_counts$Region)){
print(
paste0(
medal_counts[medal_counts$Region == i, "n"],
" Olympic gold medalists are from ",
i,
"." )
)
}
# Chunk 8
unique(medal_counts$Region)
# Chunk 9
for(i in unique(medal_counts$Region)){
n_medals <- medal_counts[medal_counts$Region == i, "n"]
## Execute only if the number of medal is equal to 1!
if(n_medals == 1){
print(
paste0(
"One Olympic gold medalist is from ",
i,
"." )
)
}else{
## In all other cases, do the following:
print(
paste0(
n_medals,
" Olympic gold medalists are from ",
i,
"." )
)
}
}
# Chunk 10
x <- 10
if(x < 100){
x * 2
}else{
x
}
medal_counts$n_100 <- ifelse(
medal_counts$n >= 100,
yes = TRUE,
no = FALSE
)
head(medal_counts)
styler:::style_active_file()
# Chunk 1
source(here::here("output_hook.R"))
# Chunk 2
# install.packages("tidyverse")
# install.packages("here")
library(tidyverse)
library(here)
## Load the data
characters <- readRDS(file = here::here("raw_data", "characters.rds"))
psych_stats <- read.csv(
file = here::here("raw_data", "psych_stats.csv"),
sep = ";"
)
## Reshape into long format:
psych_stats <- psych_stats %>%
pivot_longer(
cols = messy_neat:innocent_jaded,
names_to = "question",
values_to = "rating"
)
## Take a look at the data sets
str(characters)
str(psych_stats)
## Merge it
characters_stats <- merge(
x = characters,
y = psych_stats,
by.x = "id",
by.y = "char_id"
)
# Chunk 3
for (universe in unique(characters_stats$uni_name)) {
print(
paste0(
"The fictional universe '",
universe,
"' is part of the characters data set."
)
)
}
# Chunk 4
characters_friends <- characters_stats %>%
filter(uni_name == "Friends")
# Chunk 5
for (i in unique(characters_friends$question)) { # goes over all unique questions
## Build a subset that only consists of ratings about the current question:
question_dat <- characters_friends %>%
filter(question == i)
## Calculate the mean for that subset:
question_mean <- mean(question_dat$rating)
## Build and print the final statement:
statement <- paste("The mean rating for the fictional universe 'Friends' on the question '", i, "' is:", question_mean)
print(statement)
}
# Chunk 6
## Build an empty data frame for storing the results:
mean_ratings <- data.frame()
for (i in 1:length(unique(characters_friends$question))) {
## Extract the question on position i:
question_i <- unique(characters_friends$question)[i]
## Extract all rows that contain values for this question:
question_dat <- characters_friends %>%
filter(question == question_i)
## Calculate the mean for that question
question_mean <- mean(question_dat$rating)
## Save the question in the row corresponding to the position of i:
mean_ratings[i, "question"] <- question_i
## Save the mean in the row corresponding to the position of i:
mean_ratings[i, "mean"] <- question_mean
}
head(mean_ratings)
characters_friends %>%
group_by(question) %>%
summarise(mean_rating = mean(rating)) %>%
## Let's look at the rating of this question for comparison:
filter(question == "messy_neat")
p <- p +
geom_col(aes(fill = Region, x = reorder(Sport, n), color = Region))
p
# Chunk 1
library(tidyverse)
athletes <- readRDS(file = here::here("raw_data", "athletes.rds"))
world_coordinates <- readRDS(file = here::here("raw_data", "world_coordinates.rds"))
medal_counts <- athletes %>%
filter(Medal == "Gold") %>%
group_by(Region) %>%
count(Medal)
medal_countries <- world_coordinates %>%
rename("Region" = region) %>%
left_join(medal_counts)
# Chunk 2
best_by_sport <- athletes %>%
## Get all gold medalists
filter(Medal == "Gold") %>%
## Group them by sport and region
group_by(Sport, Region) %>%
## count the number of medals each country has per sport category
count(Medal) %>%
## Now only group by sport, so we can extract the maximum medal row by sport, and not by sport and country
group_by(Sport) %>%
## Extract the country with the most medals
slice(which.max(n))
head(best_by_sport)
# Chunk 3
#| fig-height: 8
#| fig-width: 11
p <- ggplot(
data = best_by_sport,
aes(
x = Sport,
y = n
)
)
p
# Chunk 4
#| fig-height: 8
#| fig-width: 11
p +
geom_col()
#| fig-height: 8
#| fig-width: 11
p <- p +
geom_col(aes(fill = Region, x = reorder(Sport, n), color = Region))
p
#| fig-height: 8
#| fig-width: 11
p <- p +
geom_col(aes(colour = Region, x = reorder(Sport, n)))
p
#| fig-height: 8
#| fig-width: 11
p +
geom_point()
#| fig-height: 8
#| fig-width: 11
p_2 +
geom_point()
ggplot(
data = best_by_sport,
aes(
x = Sport,
y = n,
colour = Region
)
) +
geom_col() +
geom_point()
styler:::style_active_file()
#| fig-height: 8
#| fig-width: 11
p_2 <- p +
geom_col(aes(colour = Region, x = reorder(Sport, n)))
p_2
#| fig-height: 8
#| fig-width: 11
ggplot(
data = best_by_sport,
aes(
x = Sport,
y = n,
colour = Region
)
) +
geom_col() +
geom_point()
# Chunk 1
# install.packages("tidyverse")
# install.packages("here")
library(tidyverse)
library(here)
## Load the data
characters <- readRDS(file = here::here("raw_data", "characters.rds"))
psych_stats <- read.csv(
file = here::here("raw_data", "psych_stats.csv"),
sep = ";"
)
## Reshape into long format:
psych_stats <- psych_stats %>%
pivot_longer(
cols = messy_neat:innocent_jaded,
names_to = "question",
values_to = "rating"
)
## Merge it
characters_stats <- merge(
x = characters,
y = psych_stats,
by.x = "id",
by.y = "char_id"
)
# Chunk 2
questions <- unique(characters_stats$question)[1:10]
questions
# Chunk 3
characters_subset <- characters_stats %>%
filter(uni_name %in% c("Friends"),
question %in% questions)
ggplot(data = characters_subset,
aes(x = question,
y = rating,
fill = name)
) +
geom_col(position = "dodge", colour = "black") +
scale_fill_brewer(palette = "Dark2") +
theme_bw()
ggplot(data = characters_subset,
aes(x = rating,
y = question,
fill = name)
) +
geom_col(position = "dodge", colour = "black") +
scale_fill_brewer(palette = "Dark2") +
facet_grid(. ~ name) +
theme_bw()
## second axis?
ggplot(data = characters_subset,
aes(x = question,
y = rating,
fill = name)
) +
geom_col(position = "dodge", colour = "black") +
scale_fill_brewer(palette = "Dark2") +
theme_bw()
ggplot(data = characters_subset,
aes(x = rating,
y = question,
fill = name)
) +
geom_col(position = "dodge", colour = "black") +
scale_fill_brewer(palette = "Dark2") +
facet_grid(. ~ name) +
theme_bw()
## second axis?
ggplot(data = characters_subset,
aes(x = rating,
y = question,
fill = question)
) +
geom_col(position = "dodge", colour = "black") +
scale_fill_brewer(palette = "Dark2") +
facet_grid(. ~ name) +
theme_bw()
ggplot(data = characters_subset,
aes(x = question,
y = rating,
fill = name)
) +
geom_col(position = "dodge", colour = "black") +
scale_fill_brewer(palette = "Dark2") +
theme_bw()
ggplot(data = characters_subset,
aes(x = rating,
y = question,
fill = name)
) +
geom_col(position = "dodge", colour = "black") +
scale_fill_brewer(palette = "Dark2") +
theme_bw()
ggplot(data = characters_subset,
aes(x = rating,
y = question,
fill = question)
) +
geom_col(position = "dodge", colour = "black") +
scale_fill_brewer(palette = "Dark2") +
facet_grid(. ~ name) +
theme_bw()
ggplot(data = characters_subset,
aes(x = rating,
y = question,
fill = name)
) +
geom_col(position = "dodge", colour = "black") +
scale_fill_brewer(palette = "Dark2") +
facet_grid(. ~ name) +
theme_bw()
ggplot(data = characters_subset,
aes(x = rating,
y = question,
fill = rating)
) +
geom_col(position = "dodge", colour = "black") +
#scale_fill_brewer(palette = "Dark2") +
facet_grid(. ~ name) +
theme_bw()
?geom_col
p <- p +
geom_col(position = "dodge",
colour = "black",
fill = rating)
# Chunk 1
# install.packages("tidyverse")
# install.packages("here")
library(tidyverse)
library(here)
## Load the data
characters <- readRDS(file = here::here("raw_data", "characters.rds"))
psych_stats <- read.csv(
file = here::here("raw_data", "psych_stats.csv"),
sep = ";"
)
## Reshape into long format:
psych_stats <- psych_stats %>%
pivot_longer(
cols = messy_neat:innocent_jaded,
names_to = "question",
values_to = "rating"
)
## Merge it
characters_stats <- merge(
x = characters,
y = psych_stats,
by.x = "id",
by.y = "char_id"
)
# Chunk 2
questions <- unique(characters_stats$question)[1:10]
questions
# Chunk 3
characters_subset <- characters_stats %>%
filter(uni_name %in% c("Friends"),
question %in% questions)
# Chunk 1
# install.packages("tidyverse")
# install.packages("here")
library(tidyverse)
library(here)
## Load the data
characters <- readRDS(file = here::here("raw_data", "characters.rds"))
psych_stats <- read.csv(
file = here::here("raw_data", "psych_stats.csv"),
sep = ";"
)
## Reshape into long format:
psych_stats <- psych_stats %>%
pivot_longer(
cols = messy_neat:innocent_jaded,
names_to = "question",
values_to = "rating"
)
## Merge it
characters_stats <- merge(
x = characters,
y = psych_stats,
by.x = "id",
by.y = "char_id"
)
characters_subset <- characters_stats %>%
filter(uni_name %in% c("Friends"),
question %in% questions)
str(characters_subset)
p <- ggplot(data = characters_subset,
aes(x = rating,
y = question)
)
p
p <- p +
facet_grid(. ~ name)
p
p <- p +
geom_col(position = "dodge",
colour = "black",
fill = rating)
p <- p +
geom_col(
aes(fill = rating),
position = "dodge",
colour = "black"
)
p
styler:::style_active_file()
p +
scale_fill_manual(values = viridisLite::viridis(19)) +
theme_bw()
p +
scale_fill_manual(values = viridisLite::viridis()) +
theme_bw()
p +
scale_fill_manual(values = viridisLite::scale_colour_viridis_d()) +
theme_bw()
